// <auto-generated />
using System;
using Ims.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ims.Infra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250513193941_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ims.Domain.Customers.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("Notes");

                    b.Property<bool>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<int>("TenantId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Type");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Ims.Domain.Customers.Customer", b =>
                {
                    b.OwnsOne("Ims.Domain.Customers.ValueObjects.Address", "Address", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .HasColumnType("int");

                            b1.Property<string>("AdditionalInfo")
                                .HasColumnType("nvarchar(150)")
                                .HasColumnName("AdditionalInfo");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("City");

                            b1.Property<string>("Country")
                                .IsRequired()
                                .HasColumnType("nvarchar(60)")
                                .HasColumnName("Country");

                            b1.Property<string>("Neighborhood")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Neighborhood");

                            b1.Property<string>("Number")
                                .IsRequired()
                                .HasColumnType("nvarchar(10)")
                                .HasColumnName("Number");

                            b1.Property<string>("State")
                                .IsRequired()
                                .HasColumnType("char(2)")
                                .HasColumnName("State");

                            b1.Property<string>("Street")
                                .IsRequired()
                                .HasColumnType("nvarchar(100)")
                                .HasColumnName("Street");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");

                            b1.OwnsOne("Ims.Domain.Customers.ValueObjects.PostalCode", "PostalCode", b2 =>
                                {
                                    b2.Property<int>("AddressCustomerId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasColumnType("char(9)")
                                        .HasColumnName("PostalCode");

                                    b2.HasKey("AddressCustomerId");

                                    b2.ToTable("Customers");

                                    b2.WithOwner()
                                        .HasForeignKey("AddressCustomerId");
                                });

                            b1.Navigation("PostalCode")
                                .IsRequired();
                        });

                    b.OwnsOne("Ims.Domain.Customers.ValueObjects.CompanyInfo", "CompanyInfo", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .HasColumnType("int");

                            b1.Property<string>("BillingTerm")
                                .IsRequired()
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("BillingTerm");

                            b1.Property<string>("CorporateName")
                                .IsRequired()
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("CorporateName");

                            b1.Property<decimal>("Fine")
                                .HasColumnType("decimal(10,4)")
                                .HasColumnName("Fine");

                            b1.Property<decimal>("Interest")
                                .HasColumnType("decimal(8,2)")
                                .HasColumnName("Interest");

                            b1.Property<string>("StateRegistration")
                                .HasColumnType("nvarchar(50)")
                                .HasColumnName("StateRegistration");

                            b1.Property<string>("TradeName")
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("TradeName");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");

                            b1.OwnsOne("Ims.Domain.Customers.ValueObjects.CNPJ", "CNPJ", b2 =>
                                {
                                    b2.Property<int>("CompanyInfoCustomerId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasColumnType("char(18)")
                                        .HasColumnName("CNPJ");

                                    b2.HasKey("CompanyInfoCustomerId");

                                    b2.ToTable("Customers");

                                    b2.WithOwner()
                                        .HasForeignKey("CompanyInfoCustomerId");
                                });

                            b1.Navigation("CNPJ")
                                .IsRequired();
                        });

                    b.OwnsOne("Ims.Domain.Customers.ValueObjects.ContactInfo", "ContactInfo", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .HasColumnType("int");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");

                            b1.OwnsOne("Ims.Domain.Customers.ValueObjects.Mobile", "Mobile", b2 =>
                                {
                                    b2.Property<int>("ContactInfoCustomerId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Number")
                                        .IsRequired()
                                        .HasColumnType("char(16)")
                                        .HasColumnName("Mobile");

                                    b2.HasKey("ContactInfoCustomerId");

                                    b2.ToTable("Customers");

                                    b2.WithOwner()
                                        .HasForeignKey("ContactInfoCustomerId");
                                });

                            b1.OwnsOne("Ims.Domain.Customers.ValueObjects.Phone", "Phone", b2 =>
                                {
                                    b2.Property<int>("ContactInfoCustomerId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Number")
                                        .IsRequired()
                                        .HasColumnType("char(14)")
                                        .HasColumnName("Phone");

                                    b2.HasKey("ContactInfoCustomerId");

                                    b2.ToTable("Customers");

                                    b2.WithOwner()
                                        .HasForeignKey("ContactInfoCustomerId");
                                });

                            b1.OwnsMany("Ims.Domain.Customers.ValueObjects.Email", "Emails", b2 =>
                                {
                                    b2.Property<int>("CustomerId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Address")
                                        .HasColumnType("nvarchar(200)")
                                        .HasColumnName("Address");

                                    b2.HasKey("CustomerId", "Address");

                                    b2.ToTable("Email");

                                    b2.WithOwner()
                                        .HasForeignKey("CustomerId");
                                });

                            b1.Navigation("Emails");

                            b1.Navigation("Mobile");

                            b1.Navigation("Phone");
                        });

                    b.OwnsOne("Ims.Domain.Customers.ValueObjects.PersonInfo", "PersonInfo", b1 =>
                        {
                            b1.Property<int>("CustomerId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("BirthDate")
                                .HasColumnType("datetime")
                                .HasColumnName("BirthDate");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(200)")
                                .HasColumnName("Name");

                            b1.HasKey("CustomerId");

                            b1.ToTable("Customers");

                            b1.WithOwner()
                                .HasForeignKey("CustomerId");

                            b1.OwnsOne("Ims.Domain.Customers.ValueObjects.CPF", "CPF", b2 =>
                                {
                                    b2.Property<int>("PersonInfoCustomerId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasColumnType("char(14)")
                                        .HasColumnName("CPF");

                                    b2.HasKey("PersonInfoCustomerId");

                                    b2.ToTable("Customers");

                                    b2.WithOwner()
                                        .HasForeignKey("PersonInfoCustomerId");
                                });

                            b1.Navigation("CPF")
                                .IsRequired();
                        });

                    b.Navigation("Address")
                        .IsRequired();

                    b.Navigation("CompanyInfo");

                    b.Navigation("ContactInfo")
                        .IsRequired();

                    b.Navigation("PersonInfo");
                });
#pragma warning restore 612, 618
        }
    }
}
